{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nexport class TimezonePipe {\n  transform(offsetSeconds) {\n    // Calculate hours and minutes\n    const hours = Math.floor(offsetSeconds / 3600);\n    const minutes = Math.floor(offsetSeconds % 3600 / 60);\n    // Construct a formatted string\n    const sign = offsetSeconds >= 0 ? '+' : '-';\n    return `UTC${sign}${this.padWithZero(hours)}:${this.padWithZero(minutes)}`;\n  }\n  padWithZero(num) {\n    return num < 10 ? `0${num}` : `${num}`;\n  }\n}\n_class = TimezonePipe;\n_class.ɵfac = function TimezonePipe_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"timezone\",\n  type: _class,\n  pure: true\n});","map":{"version":3,"names":["TimezonePipe","transform","offsetSeconds","hours","Math","floor","minutes","sign","padWithZero","num","pure"],"sources":["/Users/smartcookie/Desktop/angularApps/WebApps/SampleProjects/WeatherApp/src/app/pipes/timezone.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'timezone'\n})\nexport class TimezonePipe implements PipeTransform {\n\n  transform(offsetSeconds: number): string {\n    // Calculate hours and minutes\n    const hours = Math.floor(offsetSeconds / 3600);\n    const minutes = Math.floor((offsetSeconds % 3600) / 60);\n\n    // Construct a formatted string\n    const sign = offsetSeconds >= 0 ? '+' : '-';\n    return `UTC${sign}${this.padWithZero(hours)}:${this.padWithZero(minutes)}`;\n  }\n\n  private padWithZero(num: number): string {\n    return num < 10 ? `0${num}` : `${num}`;\n  }\n}\n"],"mappings":";;AAKA,OAAM,MAAOA,YAAY;EAEvBC,SAASA,CAACC,aAAqB;IAC7B;IACA,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACH,aAAa,GAAG,IAAI,CAAC;IAC9C,MAAMI,OAAO,GAAGF,IAAI,CAACC,KAAK,CAAEH,aAAa,GAAG,IAAI,GAAI,EAAE,CAAC;IAEvD;IACA,MAAMK,IAAI,GAAGL,aAAa,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG;IAC3C,OAAO,MAAMK,IAAI,GAAG,IAAI,CAACC,WAAW,CAACL,KAAK,CAAC,IAAI,IAAI,CAACK,WAAW,CAACF,OAAO,CAAC,EAAE;EAC5E;EAEQE,WAAWA,CAACC,GAAW;IAC7B,OAAOA,GAAG,GAAG,EAAE,GAAG,IAAIA,GAAG,EAAE,GAAG,GAAGA,GAAG,EAAE;EACxC;;SAdWT,YAAY;;mBAAZA,MAAY;AAAA;;;QAAZA,MAAY;EAAAU,IAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
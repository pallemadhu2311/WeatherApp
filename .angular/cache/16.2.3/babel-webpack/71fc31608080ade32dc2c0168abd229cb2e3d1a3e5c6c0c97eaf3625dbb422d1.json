{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nexport class TimePipe {\n  transform(unixTime) {\n    const date = new Date(unixTime * 1000); // Convert seconds to milliseconds\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n    const period = hours < 12 ? 'AM' : 'PM';\n    const formattedHours = hours % 12 || 12;\n    return `${formattedHours}:${minutes < 10 ? '0' : ''}${minutes} ${period}`;\n  }\n}\n_class = TimePipe;\n_class.ɵfac = function TimePipe_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"time\",\n  type: _class,\n  pure: true\n});","map":{"version":3,"names":["TimePipe","transform","unixTime","date","Date","hours","getHours","minutes","getMinutes","period","formattedHours","pure"],"sources":["/Users/smartcookie/Desktop/angularApps/WebApps/SampleProjects/WeatherApp/src/app/pipes/time.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'time'\n})\nexport class TimePipe implements PipeTransform {\n\n  transform(unixTime: number): string {\n    const date = new Date(unixTime * 1000); // Convert seconds to milliseconds\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n    const period = hours < 12 ? 'AM' : 'PM';\n    const formattedHours = hours % 12 || 12;\n    return `${formattedHours}:${minutes < 10 ? '0' : ''}${minutes} ${period}`;\n  }\n}\n"],"mappings":";;AAKA,OAAM,MAAOA,QAAQ;EAEnBC,SAASA,CAACC,QAAgB;IACxB,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC;IACxC,MAAMG,KAAK,GAAGF,IAAI,CAACG,QAAQ,EAAE;IAC7B,MAAMC,OAAO,GAAGJ,IAAI,CAACK,UAAU,EAAE;IACjC,MAAMC,MAAM,GAAGJ,KAAK,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI;IACvC,MAAMK,cAAc,GAAGL,KAAK,GAAG,EAAE,IAAI,EAAE;IACvC,OAAO,GAAGK,cAAc,IAAIH,OAAO,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAGA,OAAO,IAAIE,MAAM,EAAE;EAC3E;;SATWT,QAAQ;;mBAARA,MAAQ;AAAA;;;QAARA,MAAQ;EAAAW,IAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}